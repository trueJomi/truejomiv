---
import { generateBreadcrumbs, generateBreadcrumbStructuredData, type BreadcrumbItem } from '@/utils/seo';

interface Props {
  title: string;
  description: string;
  image?: string;
  url?: string;
  type?: 'website' | 'article' | 'profile';
  keywords?: string[];
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
  locale?: string;
  alternateLocales?: { locale: string; url: string }[];
  noindex?: boolean;
  canonical?: string;
  breadcrumbs?: BreadcrumbItem[];
  organization?: {
    name: string;
    url: string;
    logo: string;
  };
}

const {
  title,
  description,
  image = '/favicon.ico',
  url = Astro.url.href,
  type = 'website',
  keywords = [],
  author = 'Jose Miguel Vasquez',
  publishedTime,
  modifiedTime,
  locale = 'es-PE',
  alternateLocales = [],
  noindex = false,
  canonical = url,
  breadcrumbs,
  organization
} = Astro.props;

// Crear el tÃ­tulo completo
const fullTitle = title.includes('Jose Miguel Vasquez') 
  ? title 
  : `${title} | Jose Miguel Vasquez`;

// Generar keywords meta tag
const keywordsString = keywords.length > 0 ? keywords.join(', ') : 
  'Jose Miguel Vasquez, Desarrollador Full Stack, Programador, React, Node.js, TypeScript, Python, Portfolio';

// Crear URLs absolutas
const absoluteUrl = new URL(url, 'https://truejomiv.com').href;
const absoluteImage = image.startsWith('http') ? image : new URL(image, 'https://truejomiv.com').href;

// Generar breadcrumbs si no se proporcionan
const finalBreadcrumbs = breadcrumbs || generateBreadcrumbs(Astro.url.pathname, locale.split('-')[0] as 'es' | 'en');
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="keywords" content={keywordsString} />
<meta name="author" content={author} />
<meta name="robots" content={noindex ? "noindex, nofollow" : "index, follow"} />
<meta name="language" content={locale} />
<meta name="revisit-after" content="7 days" />
<link rel="canonical" href={canonical} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={absoluteUrl} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={absoluteImage} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content="Jose Miguel Vasquez - Portfolio" />
<meta property="og:locale" content={locale} />

{alternateLocales.map(alt => (
  <meta property="og:locale:alternate" content={alt.locale} />
))}

{publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}

{modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}

{type === 'article' && author && (
  <meta property="article:author" content={author} />
)}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={absoluteUrl} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={absoluteImage} />
<meta property="twitter:image:alt" content={title} />
<meta property="twitter:creator" content="@truejomiv" />
<meta property="twitter:site" content="@truejomiv" />

<!-- Alternate language versions -->
{alternateLocales.map(alt => (
  <link rel="alternate" hreflang={alt.locale} href={alt.url} />
))}

<!-- Additional SEO enhancements -->
<meta name="theme-color" content="#1a1a1a" />
<meta name="msapplication-TileColor" content="#1a1a1a" />

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'profile' ? "Person" : "WebSite",
  "name": type === 'profile' ? "Jose Miguel Vasquez" : fullTitle,
  "description": description,
  "url": absoluteUrl,
  "image": absoluteImage,
  ...(type === 'profile' && {
    "jobTitle": "Desarrollador Full Stack",
    "worksFor": {
      "@type": "Organization",
      "name": "Freelancer"
    },
    "sameAs": [
      "https://github.com/truejomiv",
      "https://linkedin.com/in/truejomiv"
    ],
    "knowsAbout": keywords.slice(0, 10) // Limitar keywords para datos estructurados
  }),
  ...(type === 'website' && {
    "author": {
      "@type": "Person",
      "name": author
    },
    "publisher": {
      "@type": "Person",
      "name": author
    },
    ...(organization && {
      "publisher": {
        "@type": "Organization",
        "name": organization.name,
        "url": organization.url,
        "logo": {
          "@type": "ImageObject",
          "url": organization.logo
        }
      }
    })
  })
})} />

{finalBreadcrumbs.length > 1 && (
  <script type="application/ld+json" set:html={JSON.stringify(generateBreadcrumbStructuredData(finalBreadcrumbs))} />
)}
