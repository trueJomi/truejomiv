---
import type { Projects, Skills } from "@/types/cv.type";
import { Image } from "astro:assets";
import SkillTag from "./SkillTag.astro";

interface Props {
  data: Projects;
  skills: Skills[];
}

const { data, skills }: Props = Astro.props;
---

<div
  class="font-roboto-mono bg-main text-white p-4 rounded-md min-h-120 w-full flex flex-col justify-between gap-2 border-main-50 border-2 max-w-md"
>
  <div>
    <picture>
      <Image
        src={data.image}
        alt={data.name}
        class="w-full h-48 object-cover rounded-md mb-4 bg-white"
        loading="lazy"
        width={400}
        height={300}
      />
    </picture>
    <h1 class="text-2xl font-black text-secondary mb-2">
      {data.name}
    </h1>
    <p
      title={data.description}
      class="text-white font-mono font-bold line-clamp-3"
    >
      {data.description}
    </p>
    <ul class="flex flex-wrap gap-2 gap-y-1">
      {
        data.tecnologies.map((tech) => {
          const skill = skills.find((s) => s.icon === tech);
          if (!skill) return null;
          return <SkillTag skill={skill} />;
        })
      }
    </ul>
  </div>
  <div class:list={[
    "grid gap-1 text-sm md:text-base",
    data.public ? "grid-cols-2" : "grid-cols-1"
  ]}>
    <a class="col-span-1" href="">
      <button
        class="font-roboto-mono bg-tertiary text-main-200 px-4 py-2 rounded-lg hover:bg-secondary transition-colors w-full border-2 font-bold uppercase"
      >
        Ver Proyecto
      </button>
    </a>
    {
      data.public && (
        <a class="col-span-1" href="">
          <button class="font-roboto-mono bg-main-500 text-white px-4 py-2 rounded-lg w-full hover:bg-main-600 border-2 border-transparent hover:border-main-400 transition-colors font-bold uppercase">
            Ver Repositorio
          </button>
        </a>
      )
    }
  </div>
</div>
